(define (gcd a b)
  (if
    (= b 0)
    a
    (gcd b (remainder a b))))

Applicative order (first evaluate arguments then apply procedure).

(gcd 206 40)
(gcd 40 (remainder 206 40))
; evaluate arguments
; 1
(gcd 40 6)
(gcd 6 (remainder 40 6))
; evaluate arguments
; 2
(gcd 6 4)
(gcd 4 (remainder 6 4))
; evaluate arguments
; 3
(gcd 4 2)
(gcd 2 (remainder 4 2))
; evaluate arguments
; 4
(gcd 2 0)
2


Normal order (first extend all defined procedures then apply evaluation)
(gcd 206 40)
(gcd 40 (remainder 206 40))
(if
  (= (remainder 206 40) 0)
  40
  (gcd (remainder 206 40) (remainder 40 (remainder 206 40))))
; evaluate predicate <> 0
; 1
(gcd (remainder 206 40) (remainder 40 (remainder 206 40)))
(if
  (= (remainder 40 (remainder 206 40)) 0)
  (remainder 206 40)
  (gcd
    (remainder 40 (remainder 206 40))
    (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))))
; evaluate predicate <> 0
; + 2 = 3
(gcd
  (remainder 40 (remainder 206 40))
  (remainder (remainder 206 40) (remainder 40 (remainder 206 40))))
(if
  (= (remainder (remainder 206 40) (remainder 40 (remainder 206 40))) 0)
  (remainder 40 (remainder 206 40))
  (gcd
    (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
    (remainder
      (remainder 40 (remainder 206 40))
      (remainder (remainder 206 40) (remainder 40 (remainder 206 40))))))
; evaluate predicate <> 0
; + 4 = 7
(gcd
  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
  (remainder
    (remainder 40 (remainder 206 40))
    (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))))
(if
  (=
    (remainder
      (remainder 40 (remainder 206 40))
      (remainder (remainder 206 40) (remainder 40 (remainder 206 40))))
    0)
  (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
  (gcd
    (remainder
      (remainder 40 (remainder 206 40))
      (remainder (remainder 206 40) (remainder 40 (remainder 206 40))))
    (remainder
      (remainder 40 (remainder 206 40))
      (remainder
        (remainder 40 (remainder 206 40))
        (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))))))
; evaluate predicate = 0
; + 7 = 14
(remainder (remainder 206 40) (remainder 40 (remainder 206 40)))
; + 4 = 18
2

Applicative order: 4 applications of remainder procedure
Normal order: 18 applications of remainder procedure
